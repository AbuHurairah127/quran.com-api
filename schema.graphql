type AudioFile {
  duration: Int
  id: ID!
  recitationId: Int
  segments: String
  url: String
  verseId: Int
}

type Chapter {
  """
  Boolean attribute indicating if this surah should show bismillah
  """
  bismillahPre: Boolean!

  """
  Surah number
  """
  chapterNumber: Int!
  id: ID!
  nameArabic: String!
  nameComplex: String!
  nameSimple: String!
  pages: [Int!]!
  revelationOrder: Int!
  revelationPlace: String!

  """
  Translated chapter names
  """
  translatedName(language: String! = "en"): TranslatedName

  """
  verses for this chapter, max 50 results per call
  """
  verses(
    """
    starting ayah number
    """
    from: Int

    """
    page number for paginating within from-to ayah range
    """
    page: Int = 1

    """
    number of ayahs per call
    """
    perPage: Int = 10

    """
    last ayah number
    """
    to: Int
  ): [Verse!]
  versesCount: Int!
}

type ChapterInfo {
  chapterId: Int
  id: ID
  languageName: String
  shortText: String
  source: String
  text: String
}

"""
Represents untyped JSON
"""
scalar JSON

type Juz {
  id: ID!
  juzNumber: Int
  verseMapping: JSON

  """
  verses for this juz, max 50 results per call
  """
  verses(
    """
    page number for paginating within from-to ayah range
    """
    page: Int = 1

    """
    number of ayahs per call
    """
    perPage: Int = 10
  ): [Verse!]
}

type Query {
  audioFile(recitationId: ID!, verseId: ID!): AudioFile!
  audioFiles(recitationId: ID!, verseIds: [ID!]!): [AudioFile!]!

  """
  Chapter/Surah detail.
  """
  chapter(id: ID!, language: String = "en"): Chapter!
  chapterInfo(chapterId: ID!, language: String = "en"): ChapterInfo!

  """
  Chapter/Surah list. Use `language` query string if you want to fetch translated names in a specific language.
  """
  chapters(language: String = "en"): [Chapter!]!
  juzs: [Juz!]!
  searchVerses(language: String = "en", page: Int = 1, query: String!, size: Int = 20): SearchResults
  tafsirs(verseId: ID, verseKey: String): [Tafsir!]!
  verse(id: ID): Verse!
  verseByVerseKey(verseKey: String!): Verse!
  verses(chapterId: ID!, language: String = "en", limit: Int = 10, offset: Int = 0, page: Int = 1): [Verse!]!
}

type SearchResults {
  currentPage: Int!
  perPage: Int!
  query: String!
  results: [Verse!]!
  took: Int!
  totalCount: Int!
  totalPages: Int!
}

type Tafsir {
  id: ID!
  languageId: Int
  languageName: String
  resourceContentId: Int
  resourceName: String
  text: String
  verseId: Int
  verseKey: String
}

type TranslatedName {
  id: ID!
  languageId: Int
  languageName: String
  name: String!
}

type Translation {
  id: ID!
  languageId: Int
  languageName: String
  resourceName: String
  text: String
  verseId: Int
}

type Verse {
  """
  recitation of verse
  """
  audio(
    """
    Recitation id
    """
    recitation: Int!
  ): AudioFile
  chapterId: Int
  hizbNumber: Int
  id: ID!
  imageUrl: String
  imageWidth: Int
  juzNumber: Int
  pageNumber: Int
  rubNumber: Int
  sajdahNumber: Int
  sajdahType: String

  """
  tafsirs of the verse
  """
  tafsirs(
    """
    Comma separated ids of tafsir to load for each verse
    """
    tafsirIds: String!
  ): [Tafsir!]
  textImlaei: String
  textImlaeiSimple: String
  textIndopak: String
  textUthmani: String
  textUthmaniSimple: String
  textUthmaniTajweed: String

  """
  translations of verse
  """
  translations(
    """
    Comma separated ids of translation to load for each verse
    """
    translationIds: String!
  ): [Translation!]
  v1Page: Int
  v2Page: Int
  verseIndex: Int
  verseKey: String
  verseNumber: Int

  """
  words of the verse
  """
  words: [Word!]
}

type Word {
  audioUrl: String
  chapterId: Int
  charTypeName: String
  className: String
  code: String
  id: ID!
  lineNumber: Int
  location: String
  pageNumber: Int
  position: Int
  textImlaei: String
  textIndopak: String
  textSimple: String
  textUthmani: String

  """
  word translation in given language. If translation for give language doesn't exist, we'll fallback to English translation
  """
  translation: WordTranslation
  v1Page: Int
  v2Page: Int
  verseId: Int
  verseKey: String
}

type WordTranslation {
  id: ID!
  languageId: Int
  languageName: String
  text: String
  wordId: Int
}